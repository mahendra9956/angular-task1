{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/card\";\nfunction LoginPageComponent_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email is field required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginPageComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginPageComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is field required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginPageComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password must be at least 6 characters long \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginPageComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log('Validation succesful.', this.loginForm.value);\n    }\n  }\n  static #_ = this.ɵfac = function LoginPageComponent_Factory(t) {\n    return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPageComponent,\n    selectors: [[\"app-login-page\"]],\n    decls: 16,\n    vars: 6,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"type\", \"email\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"type\", \"password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"]],\n    template: function LoginPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"mat-form-field\", 1)(3, \"mat-label\");\n        i0.ɵɵtext(4, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 2);\n        i0.ɵɵtemplate(6, LoginPageComponent_mat_error_6_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(7, LoginPageComponent_mat_error_7_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-form-field\", 1)(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 4);\n        i0.ɵɵtemplate(12, LoginPageComponent_mat_error_12_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(13, LoginPageComponent_mat_error_13_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 5);\n        i0.ɵɵtext(15, \"Login\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.hasError(\"email\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.hasError(\"minlength\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.MatInput, i4.MatFormField, i4.MatLabel, i4.MatError, i5.MatButton, i6.MatCard],\n    styles: [\"mat-card[_ngcontent-%COMP%]{\\n    max-width: 400px;\\n    margin: 2rem auto;\\n    padding: 2em;\\n}\\nbutton[_ngcontent-%COMP%]{\\n    display: block;\\n    margin-top: 1em;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvTG9naW5EZXRhaWxzL2xvZ2luL2xvZ2luLXBhZ2UvbG9naW4tcGFnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxjQUFjO0lBQ2QsZUFBZTtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jYXJke1xyXG4gICAgbWF4LXdpZHRoOiA0MDBweDtcclxuICAgIG1hcmdpbjogMnJlbSBhdXRvO1xyXG4gICAgcGFkZGluZzogMmVtO1xyXG59XHJcbmJ1dHRvbntcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLXRvcDogMWVtO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginPageComponent","constructor","fb","loginForm","group","email","required","password","minLength","onSubmit","valid","console","log","value","_","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","LoginPageComponent_Template","rf","ctx","ɵɵlistener","LoginPageComponent_Template_form_ngSubmit_1_listener","ɵɵelement","ɵɵtemplate","LoginPageComponent_mat_error_6_Template","LoginPageComponent_mat_error_7_Template","LoginPageComponent_mat_error_12_Template","LoginPageComponent_mat_error_13_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","get","hasError","tmp_2_0","tmp_3_0","tmp_4_0","invalid"],"sources":["C:\\Users\\Dell\\Desktop\\Angular-tasks\\angular-task\\angular\\src\\app\\LoginDetails\\login\\login-page\\login-page.component.ts","C:\\Users\\Dell\\Desktop\\Angular-tasks\\angular-task\\angular\\src\\app\\LoginDetails\\login\\login-page\\login-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent {\n\n  loginForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log('Validation succesful.', this.loginForm.value);\n    }\n  }\n}","<mat-card>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Email</mat-label>\n        <input matInput formControlName=\"email\" type=\"email\">\n        <mat-error *ngIf=\"loginForm.get('email')?.hasError('required')\">\n          Email is field  required\n        </mat-error>\n        <mat-error *ngIf=\"loginForm.get('email')?.hasError('email')\">\n          Please enter a valid email address\n        </mat-error>\n      </mat-form-field>\n  \n      <mat-form-field appearance=\"fill\">\n        <mat-label>Password</mat-label>\n        <input matInput formControlName=\"password\" type=\"password\">\n        <mat-error *ngIf=\"loginForm.get('password')?.hasError('required')\">\n          Password is field required\n        </mat-error>\n        <mat-error *ngIf=\"loginForm.get('password')?.hasError('minlength')\">\n          Password must be at least 6 characters long\n        </mat-error>\n      </mat-form-field>\n  \n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"loginForm.invalid\">Login</button>\n    </form>\n  </mat-card>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}