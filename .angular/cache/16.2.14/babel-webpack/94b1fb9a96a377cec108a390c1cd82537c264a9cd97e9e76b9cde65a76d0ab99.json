{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/icon\";\nfunction LoginPageComponent_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 7);\n    i0.ɵɵtext(1, \" Username is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginPageComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 7);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginPageComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.loginFormGroup = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n  static #_ = this.ɵfac = function LoginPageComponent_Factory(t) {\n    return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPageComponent,\n    selectors: [[\"app-login-page\"]],\n    decls: 12,\n    vars: 4,\n    consts: [[3, \"formGroup\"], [1, \"contact-form-field\"], [\"appearance\", \"outline\", 1, \"w-100\", \"resizeXS\"], [\"placeholder\", \"Enter Mobile No. / E-Mail\", \"matInput\", \"\", \"formControlName\", \"username\", \"maxlength\", \"50\", \"type\", \"text\", \"aria-label\", \"Enter Your Name*\", 1, \"inputTyp2\"], [\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"Enter Password\", \"maxlength\", \"35\", \"formControlName\", \"password\", \"required\", \"\"], [\"matSuffix\", \"\", 3, \"click\"], [\"aria-hidden\", \"true\"]],\n    template: function LoginPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0)(2, \"div\", 1)(3, \"mat-form-field\", 2);\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵtemplate(5, LoginPageComponent_mat_error_5_Template, 2, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"mat-form-field\", 2);\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementStart(9, \"mat-icon\", 6);\n        i0.ɵɵlistener(\"click\", function LoginPageComponent_Template_mat_icon_click_9_listener() {\n          return ctx.hide = !ctx.hide;\n        });\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, LoginPageComponent_mat_error_11_Template, 2, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginFormGroup);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loginFormGroup.controls[\"username\"].valid && ctx.loginFormGroup.controls[\"username\"].touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loginFormGroup.controls[\"password\"].valid && ctx.loginFormGroup.controls[\"password\"].touched);\n      }\n    },\n    dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i3.MatInput, i4.MatFormField, i4.MatError, i4.MatSuffix, i5.MatIcon],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginPageComponent","constructor","fb","loginFormGroup","group","email","required","password","_","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","LoginPageComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","LoginPageComponent_mat_error_5_Template","ɵɵlistener","LoginPageComponent_Template_mat_icon_click_9_listener","hide","LoginPageComponent_mat_error_11_Template","ɵɵadvance","ɵɵproperty","controls","valid","touched","ɵɵtextInterpolate"],"sources":["C:\\Users\\Dell\\Desktop\\Angular-tasks\\angular-task\\angular\\src\\app\\LoginDetails\\login\\login-page\\login-page.component.ts","C:\\Users\\Dell\\Desktop\\Angular-tasks\\angular-task\\angular\\src\\app\\LoginDetails\\login\\login-page\\login-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent {\n\n  loginFormGroup: FormGroup;\n\n  constructor(private fb:FormBuilder){\n    this.loginFormGroup = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n}\n","<div>\n    <form [formGroup]=\"loginFormGroup\">\n\n        <div class=\"contact-form-field\">\n            <mat-form-field class=\"w-100 resizeXS\" appearance=\"outline\">\n                <input placeholder=\"Enter Mobile No. / E-Mail\" matInput formControlName=\"username\" maxlength=\"50\"\n                    type=\"text\" class=\"inputTyp2\" aria-label=\"Enter Your Name*\" />\n                <mat-error aria-hidden=\"true\"\n                    *ngIf=\"!loginFormGroup.controls['username'].valid && loginFormGroup.controls['username'].touched\">\n                    Username is required\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"contact-form-field\">\n            <mat-form-field class=\"w-100 resizeXS\" appearance=\"outline\">\n                <input matInput placeholder=\"Enter Password\"  maxlength=\"35\"\n                    formControlName=\"password\" required>\n                <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' :\n                    'visibility'}}</mat-icon>\n                <mat-error aria-hidden=\"true\"\n                    *ngIf=\"!loginFormGroup.controls['password'].valid && loginFormGroup.controls['password'].touched\">\n                    Password is required\n                </mat-error>\n            </mat-form-field>\n\n        </div>\n    </form>"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;ICMnDC,EAAA,CAAAC,cAAA,mBACsG;IAClGD,EAAA,CAAAE,MAAA,6BACJ;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IASZH,EAAA,CAAAC,cAAA,mBACsG;IAClGD,EAAA,CAAAE,MAAA,6BACJ;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;ADd5B,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,EAAc;IAAd,KAAAA,EAAE,GAAFA,EAAE;IACpB,IAAI,CAACC,cAAc,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MAClCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACU,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACW,QAAQ,CAAC;KACrC,CAAC;EACJ;EAAC,QAAAE,CAAA,G;qBATUR,kBAAkB,EAAAJ,EAAA,CAAAa,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBZ,kBAAkB;IAAAa,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR/BvB,EAAA,CAAAC,cAAA,UAAK;QAKWD,EAAA,CAAAyB,SAAA,eACkE;QAClEzB,EAAA,CAAA0B,UAAA,IAAAC,uCAAA,uBAGY;QAChB3B,EAAA,CAAAG,YAAA,EAAiB;QAErBH,EAAA,CAAAC,cAAA,aAAgC;QAExBD,EAAA,CAAAyB,SAAA,eACwC;QACxCzB,EAAA,CAAAC,cAAA,kBAA2C;QAAvBD,EAAA,CAAA4B,UAAA,mBAAAC,sDAAA;UAAA,OAAAL,GAAA,CAAAM,IAAA,IAAAN,GAAA,CAAAM,IAAA;QAAA,EAAsB;QAAC9B,EAAA,CAAAE,MAAA,IACzB;QAAAF,EAAA,CAAAG,YAAA,EAAW;QAC7BH,EAAA,CAAA0B,UAAA,KAAAK,wCAAA,uBAGY;QAChB/B,EAAA,CAAAG,YAAA,EAAiB;;;QAtBnBH,EAAA,CAAAgC,SAAA,GAA4B;QAA5BhC,EAAA,CAAAiC,UAAA,cAAAT,GAAA,CAAAjB,cAAA,CAA4B;QAOjBP,EAAA,CAAAgC,SAAA,GAA+F;QAA/FhC,EAAA,CAAAiC,UAAA,UAAAT,GAAA,CAAAjB,cAAA,CAAA2B,QAAA,aAAAC,KAAA,IAAAX,GAAA,CAAAjB,cAAA,CAAA2B,QAAA,aAAAE,OAAA,CAA+F;QASzDpC,EAAA,CAAAgC,SAAA,GACzB;QADyBhC,EAAA,CAAAqC,iBAAA,CAAAb,GAAA,CAAAM,IAAA,mCACzB;QAEb9B,EAAA,CAAAgC,SAAA,GAA+F;QAA/FhC,EAAA,CAAAiC,UAAA,UAAAT,GAAA,CAAAjB,cAAA,CAAA2B,QAAA,aAAAC,KAAA,IAAAX,GAAA,CAAAjB,cAAA,CAAA2B,QAAA,aAAAE,OAAA,CAA+F","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}